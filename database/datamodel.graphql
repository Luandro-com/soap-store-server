type Post {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  isPublished: Boolean! @default(value: false)
  title: String!
  body: String!
  author: User!
}

type User {
  id: ID! @id
  email: String! @unique
  password: String!
  firstName: String
  lastName: String
  posts: [Post!]!
  subscribed: Boolean @default(value: false)
  role: Role! @default(value: CUSTOMER)
  addresses: [Address!]!
  orders: [Order!]!
  cart: Cart @relation(link: INLINE)
  payments: [Payment!]!
}

enum Role {
  ADMIN
  EDITOR
  CUSTOMER
  DELIVERY
}

type NewsletterSubscription {
  id: ID! @id
  email: String! @unique
  createdAt: DateTime! @createdAt
}
type Address {
  id: ID! @id
  type: AddressType! @default(value: SHIPPING)
  street: String!
  number: String!
  complement: String
  zip: Int!
  district: String
  city: String
  state: String
  country: String
  firstName: String!
  lastName: String!
  customer: User!
}

enum AddressType {
  BILLING
  SHIPPING
}

type Cart {
  id: ID! @id
  products: [CartItem!]!
  updatedAt: DateTime! @updatedAt
  customer: User!
}

type CartItem {
  id: ID! @id
  cart: Cart!
  product: Product
  quantity: Int
  variants: [ProductVariant!]!
}

type ProductVariant {
  id: ID! @id
  slug: String! @unique
  name: String! @unique
  information: String
  image: String
  product: Product! @relation(name: "VariantsByProduct")
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Product {
  id: ID! @id
  slug: String! @unique
  price: Int!
  name: String! @unique
  stockQuantity: Int
  variants: [ProductVariant!]!
  @relation(name: "VariantsByProduct", onDelete: CASCADE)
  category: ProductCategory
  subCategories: [ProductSubCategory]
  description: String
  image: String
  updatedAt: DateTime! @updatedAt
}

type ProductCategory {
  id: ID! @id
  name: String! @unique
  slug: String! @unique
  subCategories: [ProductSubCategory]
  image: String
  products: [Product]
  information: String
}

type ProductSubCategory {
  id: ID! @id
  name: String! @unique
  slug: String! @unique
  image: String
  information: String
  categories: [ProductCategory!]!
}

type Cupom {
  id: ID! @id
  discount: Int!
  code: String!
  updatedAt: DateTime! @updatedAt
}

type OrderShippingAddress {
  id: ID! @id
  street: String!
  number: String!
  complement: String
  zip: Int!
  district: String
  city: String
  state: String
  country: String
  firstName: String!
  lastName: String!
  order: Order! @relation(link: INLINE)
}

type Order {
  id: ID! @id
  recurrying: Boolean! @default(value: false)
  status: OrderStatus! @default(value: WAITING_PAYMENT)
  code: String @unique
  cart: Cart!
  subTotalPrice: Int!
  totalShippingPrice: Int
  totalPrice: Int!
  customer: User!
  processedAt: DateTime
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  shippingAddress: OrderShippingAddress!
  shippingValue: Int
  shippingOption: String
  payment: Payment
}

enum OrderStatus {
  WAITING_PAYMENT
  CANCELED
  PACKAGING
  SHIPPED
  DELIVERED
  PAYED
}

type Payment {
  id: ID! @id
  paymentId: String
  type: String!
  currency: String
  creditCard: CreditCard
  url: String
  boletoNumber: String
  barCodeNumber: String
  digitableLine: String
  expirationDate: String
  instructions: String
  demonstrative: String
  assignor: String
  identification: String
  customer: User!
  merchantOrderId: String!
  customerName: String
  order: Order! @relation(link: INLINE)
  tid: String
  proofOfSale: String
  authorizationCode: String
  softDescriptor: String
  provider: String
  amount: Int
  feeAmount: Int
  netAmount: Int
  serviceTaxAmount: Int
  installments: Int
  interest: Int
  capture: Boolean @default(value: false)
  authenticate: Boolean @default(value: false)
  recurrent: Boolean @default(value: false)
  receivedDate: DateTime
  cupom: Cupom
  status: Int
  isSplitted: Boolean
  returnMessage: String
  returnCode: String
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type CreditCard {
  id: ID! @id
  cardNumber: String!
  holder: String!
  expirationDate: String!
  saveCard: Boolean @default(value: false)
  brand: String!
}

type Stores {
  id: ID! @id
  latitude: Float!
  longitude: Float!
  image: String
  name: String!
  description: String
  address: String
  city: String
  zip: Int
  updatedAt: DateTime! @updatedAt
}

type ResetPasswordRequest {
  id: ID! @id
  hash: String! @unique
  reset: Boolean @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  email: String!
}

type File {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
}

type Content {
  id: ID! @id
  title: String
  logo: String
  metaDescription: String
  metaFavicon: String
  metaKeyWords: [String!] @scalarList(strategy: RELATION)
  sections: [Section] @scalarList(strategy: RELATION)
  infoImage: String
  bannerImages: [String] @scalarList(strategy: RELATION)
  description: String
  contact: String
  footer: String
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

enum Section {
  BANNER
  INFO
  PRODUCTS
  MAP
} 